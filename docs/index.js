Index.PACKAGES = {"com" : [], "com.github" : [], "com.github.ristinak" : [{"name" : "com.github.ristinak.csvCombiner", "shortDescription" : "object for combining 2 CSV fileswith only required columns for analysis:date, open, high, low, close, volume, ticker", "object" : "com\/github\/ristinak\/csvCombiner$.html", "members_object" : [{"label" : "outputPath", "tail" : ": String", "member" : "com.github.ristinak.csvCombiner.outputPath", "link" : "com\/github\/ristinak\/csvCombiner$.html#outputPath:String", "kind" : "val"}, {"label" : "df", "tail" : ": Dataset[Row]", "member" : "com.github.ristinak.csvCombiner.df", "link" : "com\/github\/ristinak\/csvCombiner$.html#df:org.apache.spark.sql.Dataset[org.apache.spark.sql.Row]", "kind" : "val"}, {"label" : "df2", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.df2", "link" : "com\/github\/ristinak\/csvCombiner$.html#df2:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "df1", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.df1", "link" : "com\/github\/ristinak\/csvCombiner$.html#df1:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "dfTicker2", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.dfTicker2", "link" : "com\/github\/ristinak\/csvCombiner$.html#dfTicker2:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "dfTicker1", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.dfTicker1", "link" : "com\/github\/ristinak\/csvCombiner$.html#dfTicker1:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "dfOriginal2", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.dfOriginal2", "link" : "com\/github\/ristinak\/csvCombiner$.html#dfOriginal2:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "dfOriginal1", "tail" : ": DataFrame", "member" : "com.github.ristinak.csvCombiner.dfOriginal1", "link" : "com\/github\/ristinak\/csvCombiner$.html#dfOriginal1:org.apache.spark.sql.DataFrame", "kind" : "val"}, {"label" : "ticker2", "tail" : ": String", "member" : "com.github.ristinak.csvCombiner.ticker2", "link" : "com\/github\/ristinak\/csvCombiner$.html#ticker2:String", "kind" : "val"}, {"label" : "filePath2", "tail" : ": String", "member" : "com.github.ristinak.csvCombiner.filePath2", "link" : "com\/github\/ristinak\/csvCombiner$.html#filePath2:String", "kind" : "val"}, {"label" : "ticker1", "tail" : ": String", "member" : "com.github.ristinak.csvCombiner.ticker1", "link" : "com\/github\/ristinak\/csvCombiner$.html#ticker1:String", "kind" : "val"}, {"label" : "filePath1", "tail" : ": String", "member" : "com.github.ristinak.csvCombiner.filePath1", "link" : "com\/github\/ristinak\/csvCombiner$.html#filePath1:String", "kind" : "val"}, {"label" : "spark", "tail" : ": SparkSession", "member" : "com.github.ristinak.csvCombiner.spark", "link" : "com\/github\/ristinak\/csvCombiner$.html#spark:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "scala.App.main", "link" : "com\/github\/ristinak\/csvCombiner$.html#main(args:Array[String]):Unit", "kind" : "final def"}, {"label" : "delayedInit", "tail" : "(body: => Unit): Unit", "member" : "scala.App.delayedInit", "link" : "com\/github\/ristinak\/csvCombiner$.html#delayedInit(body:=>Unit):Unit", "kind" : "def"}, {"label" : "args", "tail" : "(): Array[String]", "member" : "scala.App.args", "link" : "com\/github\/ristinak\/csvCombiner$.html#args:Array[String]", "kind" : "final def"}, {"label" : "executionStart", "tail" : ": Long", "member" : "scala.App.executionStart", "link" : "com\/github\/ristinak\/csvCombiner$.html#executionStart:Long", "kind" : "final val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ristinak\/csvCombiner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ristinak\/csvCombiner$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ristinak\/csvCombiner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ristinak\/csvCombiner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ristinak\/csvCombiner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ristinak\/csvCombiner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ristinak\/csvCombiner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/csvCombiner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/csvCombiner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/csvCombiner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ristinak\/csvCombiner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ristinak\/csvCombiner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ristinak\/csvCombiner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ristinak\/csvCombiner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ristinak\/csvCombiner$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ristinak\/csvCombiner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ristinak\/csvCombiner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ristinak\/csvCombiner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ristinak\/csvCombiner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ristinak.MainObject", "shortDescription" : "object for analyzing dataframe", "object" : "com\/github\/ristinak\/MainObject$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "com.github.ristinak.MainObject.main", "link" : "com\/github\/ristinak\/MainObject$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ristinak\/MainObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ristinak\/MainObject$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ristinak\/MainObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ristinak\/MainObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ristinak\/MainObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ristinak\/MainObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ristinak\/MainObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/MainObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/MainObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/MainObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ristinak\/MainObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ristinak\/MainObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ristinak\/MainObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ristinak\/MainObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ristinak\/MainObject$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ristinak\/MainObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ristinak\/MainObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ristinak\/MainObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ristinak\/MainObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ristinak.SparkUtil", "shortDescription" : "", "object" : "com\/github\/ristinak\/SparkUtil$.html", "members_object" : [{"label" : "readDataWithView", "tail" : "(spark: SparkSession, filePath: String, source: String, viewName: String, header: Boolean, inferSchema: Boolean, printSchema: Boolean, cacheOn: Boolean): DataFrame", "member" : "com.github.ristinak.SparkUtil.readDataWithView", "link" : "com\/github\/ristinak\/SparkUtil$.html#readDataWithView(spark:org.apache.spark.sql.SparkSession,filePath:String,source:String,viewName:String,header:Boolean,inferSchema:Boolean,printSchema:Boolean,cacheOn:Boolean):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSpark", "tail" : "(appName: String, partitionCount: Int, master: String, verbose: Boolean): SparkSession", "member" : "com.github.ristinak.SparkUtil.getSpark", "link" : "com\/github\/ristinak\/SparkUtil$.html#getSpark(appName:String,partitionCount:Int,master:String,verbose:Boolean):org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ristinak\/SparkUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ristinak\/SparkUtil$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ristinak\/SparkUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ristinak\/SparkUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ristinak\/SparkUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ristinak\/SparkUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ristinak\/SparkUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/SparkUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/SparkUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/SparkUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ristinak\/SparkUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ristinak\/SparkUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ristinak\/SparkUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ristinak\/SparkUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ristinak\/SparkUtil$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ristinak\/SparkUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ristinak\/SparkUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ristinak\/SparkUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ristinak\/SparkUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.github.ristinak.Util", "shortDescription" : "", "object" : "com\/github\/ristinak\/Util$.html", "members_object" : [{"label" : "getWordCountPerLine", "tail" : "(lines: Array[String], sep: String): Array[Int]", "member" : "com.github.ristinak.Util.getWordCountPerLine", "link" : "com\/github\/ristinak\/Util$.html#getWordCountPerLine(lines:Array[String],sep:String):Array[Int]", "kind" : "def"}, {"label" : "getCharacterCount", "tail" : "(lines: Array[String], newLine: String): Int", "member" : "com.github.ristinak.Util.getCharacterCount", "link" : "com\/github\/ristinak\/Util$.html#getCharacterCount(lines:Array[String],newLine:String):Int", "kind" : "def"}, {"label" : "isFileTHere", "tail" : "(filePath: String): Boolean", "member" : "com.github.ristinak.Util.isFileTHere", "link" : "com\/github\/ristinak\/Util$.html#isFileTHere(filePath:String):Boolean", "kind" : "def"}, {"label" : "getListOfFiles", "tail" : "(dir: String, regex: String): List[File]", "member" : "com.github.ristinak.Util.getListOfFiles", "link" : "com\/github\/ristinak\/Util$.html#getListOfFiles(dir:String,regex:String):List[java.io.File]", "kind" : "def"}, {"label" : "getTextFromWebAndSave", "tail" : "(url: String, dst: String): String", "member" : "com.github.ristinak.Util.getTextFromWebAndSave", "link" : "com\/github\/ristinak\/Util$.html#getTextFromWebAndSave(url:String,dst:String):String", "kind" : "def"}, {"label" : "getTextFromWeb", "tail" : "(url: String): String", "member" : "com.github.ristinak.Util.getTextFromWeb", "link" : "com\/github\/ristinak\/Util$.html#getTextFromWeb(url:String):String", "kind" : "def"}, {"label" : "saveLines", "tail" : "(dstPath: String, lines: Array[String], append: Boolean, lineEnd: String): Unit", "member" : "com.github.ristinak.Util.saveLines", "link" : "com\/github\/ristinak\/Util$.html#saveLines(dstPath:String,lines:Array[String],append:Boolean,lineEnd:String):Unit", "kind" : "def"}, {"label" : "saveText", "tail" : "(dstPath: String, text: String, append: Boolean, verbose: Boolean): Unit", "member" : "com.github.ristinak.Util.saveText", "link" : "com\/github\/ristinak\/Util$.html#saveText(dstPath:String,text:String,append:Boolean,verbose:Boolean):Unit", "kind" : "def"}, {"label" : "getLinesFromFile", "tail" : "(src: String): Array[String]", "member" : "com.github.ristinak.Util.getLinesFromFile", "link" : "com\/github\/ristinak\/Util$.html#getLinesFromFile(src:String):Array[String]", "kind" : "def"}, {"label" : "getTextFromFile", "tail" : "(src: String): String", "member" : "com.github.ristinak.Util.getTextFromFile", "link" : "com\/github\/ristinak\/Util$.html#getTextFromFile(src:String):String", "kind" : "def"}, {"label" : "printDeltaMs", "tail" : "(t0: Long, t1: Long, taskName: String, precision: Int): Unit", "member" : "com.github.ristinak.Util.printDeltaMs", "link" : "com\/github\/ristinak\/Util$.html#printDeltaMs(t0:Long,t1:Long,taskName:String,precision:Int):Unit", "kind" : "def"}, {"label" : "deltaMs", "tail" : "(t0: Long, t1: Long, precision: Int): Double", "member" : "com.github.ristinak.Util.deltaMs", "link" : "com\/github\/ristinak\/Util$.html#deltaMs(t0:Long,t1:Long,precision:Int):Double", "kind" : "def"}, {"label" : "myRound", "tail" : "(n: Double, precision: Int): Double", "member" : "com.github.ristinak.Util.myRound", "link" : "com\/github\/ristinak\/Util$.html#myRound(n:Double,precision:Int):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/github\/ristinak\/Util$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/github\/ristinak\/Util$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/github\/ristinak\/Util$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/github\/ristinak\/Util$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/github\/ristinak\/Util$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/github\/ristinak\/Util$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/github\/ristinak\/Util$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/Util$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/Util$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/github\/ristinak\/Util$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/github\/ristinak\/Util$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/github\/ristinak\/Util$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/github\/ristinak\/Util$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/github\/ristinak\/Util$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/github\/ristinak\/Util$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/github\/ristinak\/Util$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "com\/github\/ristinak\/Util$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/github\/ristinak\/Util$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/github\/ristinak\/Util$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};